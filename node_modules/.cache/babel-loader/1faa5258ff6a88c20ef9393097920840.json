{"ast":null,"code":"var _jsxFileName = \"/home/manaf/projectvs/react/todo/src/components/RowPost/RowPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../../Axios';\nimport Youtube from 'react-youtube';\nimport { imageUrl, API_KEY } from '../../constants/constants';\nimport './RowPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RowPost(props) {\n  _s();\n\n  const [Originals, setOriginals] = useState([]);\n  const [urlId, seturlId] = useState('');\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      console.log(response.data.results);\n      setOriginals(response.data.results);\n    }).catch(err => {\n      alert('error');\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0\n    }\n  };\n\n  const handleMovie = id => {\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      if (response.data.results.length !== 0) {\n        seturlId(response.data.results[0]);\n      } else {\n        console.log(\"Trailer not available\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: Originals.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        alt: \"poster\",\n        src: `${imageUrl + obj.backdrop_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), urlId && /*#__PURE__*/_jsxDEV(Youtube, {\n      opts: opts,\n      videoId: urlId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RowPost, \"UZBID90+had1EWdlMiWPkHNiCoY=\");\n\n_c = RowPost;\nexport default RowPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"sources":["/home/manaf/projectvs/react/todo/src/components/RowPost/RowPost.js"],"names":["React","useState","useEffect","axios","Youtube","imageUrl","API_KEY","RowPost","props","Originals","setOriginals","urlId","seturlId","get","url","then","response","console","log","data","results","catch","err","alert","opts","height","width","playerVars","autoplay","handleMovie","id","length","title","map","obj","isSmall","backdrop_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,QAAR,EAAiBC,OAAjB,QAA+B,2BAA/B;AACA,OAAO,eAAP;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAOC,QAAP,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACU,GAAN,CAAUL,KAAK,CAACM,GAAhB,EAAqBC,IAArB,CAA2BC,QAAD,IAAY;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,OAA1B;AACCV,MAAAA,YAAY,CAACM,QAAQ,CAACG,IAAT,CAAcC,OAAf,CAAZ;AACJ,KAHD,EAGGC,KAHH,CAGUC,GAAD,IAAO;AACZC,MAAAA,KAAK,CAAC,OAAD,CAAL;AACH,KALD;AAMF,GAPO,EAON,EAPM,CAAT;AAQC,QAAMC,IAAI,GAAG;AACVC,IAAAA,MAAM,EAAE,KADE;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHF,GAAb;;AAQD,QAAMC,WAAW,GAAIC,EAAD,IAAO;AACvB3B,IAAAA,KAAK,CAACU,GAAN,CAAW,UAASiB,EAAG,mBAAkBxB,OAAQ,iBAAjD,EAAmES,IAAnE,CAAyEC,QAAD,IAAY;AAChF,UAAGA,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBW,MAAtB,KAA+B,CAAlC,EAAoC;AAChCnB,QAAAA,QAAQ,CAACI,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsB,CAAtB,CAAD,CAAR;AACH,OAFD,MAEK;AACDH,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AACJ,KAND;AAOH,GARD;;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKV,KAAK,CAACwB;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKvB,SAAS,CAACwB,GAAV,CAAeC,GAAD,iBACX;AAAK,QAAA,OAAO,EAAE,MAAIL,WAAW,CAACK,GAAG,CAACJ,EAAL,CAA7B;AAAuC,QAAA,SAAS,EAAEtB,KAAK,CAAC2B,OAAN,GAAc,aAAd,GAA4B,QAA9E;AAAwF,QAAA,GAAG,EAAC,QAA5F;AAAqG,QAAA,GAAG,EAAG,GAAE9B,QAAQ,GAAC6B,GAAG,CAACE,aAAc;AAAxI;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAQKzB,KAAK,iBAAI,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEa,IAAf;AAAqB,MAAA,OAAO,EAAEb;AAA9B;AAAA;AAAA;AAAA;AAAA,YARd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAxCQJ,O;;KAAAA,O;AA0CT,eAAeA,OAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from '../../Axios'\nimport Youtube from 'react-youtube'\nimport {imageUrl,API_KEY} from '../../constants/constants'\nimport './RowPost.css'\n\nfunction RowPost(props) {\n    const [Originals, setOriginals] = useState([])\n    const [urlId,seturlId]=useState('')\n    useEffect(() => {\n        axios.get(props.url).then((response)=>{\n            console.log(response.data.results);\n             setOriginals(response.data.results)\n        }).catch((err)=>{\n            alert('error')\n        })\n     },[])\n     const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 0,\n        }\n    } \n    const handleMovie = (id) =>{\n        axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((response)=>{\n            if(response.data.results.length!==0){\n                seturlId(response.data.results[0] )\n            }else{\n                console.log(\"Trailer not available\");\n            }\n        })\n    }\n    return (\n        <div className=\"row\">\n            <h2>{props.title}</h2>\n            <div className='posters'>\n                {Originals.map((obj)=>\n                    <img onClick={()=>handleMovie(obj.id)} className={props.isSmall?'smallPoster':'poster'} alt='poster' src={`${imageUrl+obj.backdrop_path}`} />\n                )}\n                \n            </div>\n            {urlId && <Youtube opts={opts} videoId={urlId}/>}\n        </div>\n    )\n}\n\nexport default RowPost\n "]},"metadata":{},"sourceType":"module"}